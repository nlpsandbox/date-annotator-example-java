/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.DateAnnotation;
import org.openapitools.model.Error;
import java.util.List;
import org.openapitools.model.Note;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-11-03T16:14:43.095400-08:00[America/Los_Angeles]")

@Validated
@Api(value = "dates", description = "the dates API")
public interface DatesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /dates : Get all date annotations
     * Returns the date annotations
     *
     * @param note  (optional)
     * @return Success (status code 200)
     *         or Unauthorized (status code 403)
     */
    @ApiOperation(value = "Get all date annotations", nickname = "datesReadAll", notes = "Returns the date annotations", response = DateAnnotation.class, responseContainer = "List", tags={ "Date", })
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success", response = DateAnnotation.class, responseContainer = "List"),
        @ApiResponse(code = 403, message = "Unauthorized", response = Error.class) })
    @RequestMapping(value = "/dates",
        produces = { "application/json" },
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<List<DateAnnotation>> datesReadAll(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) List<Note> note) {
        List<DateAnnotation> annotations = new ArrayList<DateAnnotation>();
        note.forEach((n) -> {
            // TODO: Extract annotations from the text of the Note object n
            String text = n.getText();
            System.out.print(text);

            annotations.add(new DateAnnotation()
                .start(123)
                .length(10)
                .noteId(12)
                .text("09-03-1999")
                .format("MM-DD-YYYY"));
        });
        return new ResponseEntity<List<DateAnnotation>>(annotations, HttpStatus.OK);
    }

}
